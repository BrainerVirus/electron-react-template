# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Check formatting
        run: npx prettier --check .

  test_and_coverage:
    name: Run Tests and Generate Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit/integration tests
        # This will now output the HTML report to `report/` due to vite.config.js changes
        run: npm test

      - name: Generate code coverage report
        # This will output the HTML report to `coverage/`
        run: npm run coverage

      - name: Upload Vitest HTML Test Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vitest-html-report
          path: report/ # Path where the test HTML report is generated
          retention-days: 30

      - name: Upload Vitest HTML Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vitest-coverage-report
          path: coverage/ # Path where the coverage HTML report is generated
          retention-days: 30

  deploy_reports:
    name: Deploy Vitest Reports to GitHub Pages
    runs-on: ubuntu-latest
    needs: test_and_coverage
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all test reports artifacts
        # This will download 'vitest-html-report' and 'vitest-coverage-report'
        # into `downloaded-artifacts/vitest-html-report/` and `downloaded-artifacts/vitest-coverage-report/`
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts # Download all artifacts from the run
      - name: Prepare reports for GitHub Pages
        env:
          GITHUB_PAGES_BASE_PATH: /electron-react-template/
        run: |
          # Create the root directory for GitHub Pages content and subdirectories
          mkdir -p ./.github-pages/tests
          mkdir -p ./.github-pages/coverage

          # Move contents of downloaded test report into ./.github-pages/tests/
          if [ -d "downloaded-artifacts/vitest-html-report" ]; then
              echo "Moving vitest-html-report to ./.github-pages/tests/"
              mv downloaded-artifacts/vitest-html-report/* ./.github-pages/tests/
          else
              echo "Warning: vitest-html-report artifact directory not found."
          fi

          # Move contents of downloaded coverage report into ./.github-pages/coverage/
          if [ -d "downloaded-artifacts/vitest-coverage-report" ]; then
              echo "Moving vitest-coverage-report to ./.github-pages/coverage/"
              mv downloaded-artifacts/vitest-coverage-report/* ./.github-pages/coverage/
          else
              echo "Warning: vitest-coverage-report artifact directory not found."
          fi

          # Create a root index.html for navigation with improved styling
          echo "Creating a root index.html for navigation..."
          cat <<EOF > ./.github-pages/index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Electron React Template - CI Reports</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
                      margin: 0;
                      padding: 0;
                      background-color: #f4f7f6;
                      color: #333;
                      display: flex;
                      flex-direction: column;
                      align-items: center;
                      min-height: 100vh;
                      text-align: center;
                  }
                  .container {
                      background-color: #ffffff;
                      padding: 2em 3em;
                      border-radius: 8px;
                      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
                      margin-top: 3em;
                      max-width: 600px;
                      width: 90%;
                  }
                  h1 {
                      color: #2c3e50;
                      margin-bottom: 0.5em;
                      font-size: 2em;
                  }
                  p {
                      color: #555;
                      line-height: 1.6;
                      margin-bottom: 1.5em;
                  }
                  ul {
                      list-style: none;
                      padding: 0;
                      margin-bottom: 2em;
                  }
                  li {
                      margin-bottom: 1em;
                  }
                  a {
                      color: #3498db;
                      text-decoration: none;
                      font-weight: bold;
                      padding: 0.5em 1em;
                      border: 1px solid #3498db;
                      border-radius: 4px;
                      transition: background-color 0.3s ease, color 0.3s ease;
                      display: inline-block;
                  }
                  a:hover {
                      background-color: #3498db;
                      color: #ffffff;
                  }
                  footer {
                      margin-top: auto;
                      padding: 1.5em 0;
                      font-size: 0.9em;
                      color: #7f8c8d;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>ðŸ“Š CI Reports</h1>
                  <p>Automated test and coverage reports for the Electron React Template project.</p>
                  <ul>
                      <li><a href="./tests/">View Test Results</a></li>
                      <li><a href="./coverage/">View Coverage Report</a></li>
                  </ul>
              </div>
              <footer>
                  Generated by GitHub Actions
              </footer>
          </body>
          </html>
          EOF

          echo "Contents of ./.github-pages for deployment:"
          ls -R ./.github-pages/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.github-pages/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
