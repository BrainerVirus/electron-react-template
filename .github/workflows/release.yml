name: Release

on:
  push:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Check formatting
        run: npx prettier --check .

  test_and_coverage:
    name: Run Tests and Generate Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit/integration tests
        run: npm test

      - name: Generate code coverage report
        run: npm run coverage

      - name: Upload Vitest HTML Test Report
        uses: actions/upload-artifact@v4
        if: always() # Upload even if tests fail
        with:
          name: vitest-html-report
          path: test-results/html/
          retention-days: 30

      - name: Upload Vitest HTML Coverage Report
        uses: actions/upload-artifact@v4
        if: always() # Upload even if coverage generation fails
        with:
          name: vitest-coverage-report
          path: coverage/html/
          retention-days: 30

  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [lint, test_and_coverage]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            script: dist:win
            artifact_name: app-artifacts-windows
          - os: macOS-latest
            script: dist:mac
            artifact_name: app-artifacts-mac
          - os: ubuntu-latest
            script: dist:linux
            artifact_name: app-artifacts-linux
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run ${{ matrix.script }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/
          retention-days: 7

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      issues: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Download Windows build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts-windows
          path: windows-build
      - name: Download macOS build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts-mac
          path: mac-build
      - name: Download Linux build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts-linux
          path: linux-build
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
